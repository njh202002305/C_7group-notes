예제 6-4 알파벳 출력하기
for문을 사용하여 알파벳을 출력하려면 아스키코드를 이용하여야 한다. 대문자 A부터 Z까지의 아스키코드는 65~90까지의 숫자이므로
int i; 로 변수를 설정해주고 for(i=65;i<=90;i++)로 for문을 작성해준다. 그후 printf("%c",i);프린트문을 이용하여 %c를 출력해주면
알파벳 소문자 A~Z까지 실행되는것을 확인할 수 있다. 
대문자를 소문자로 바꾸려면 대문자와 소문자의 아스키코드 숫자 차이가 32 이므로 위의 for문(i=65;i<=90;i++)의 숫자들에서 32만
더해주면 대문자를 출력되는것을 확인할 수 있다. 즉 for(i=97;i<=122;i++)로 놓고 printf("%c",i)로 출력하면 알파벳이 대문자로 출력
되는것을 확인할수 있다.

다중 for문 
다중 for문은 for문이 2개이상 중첩되어있는 for문을 말한다. 예를들어 구구단을 c언어로 실행한다고 할 때 
구구단을 살펴보면 2단은 1부터 9까지 곱하고 3단도 1부터 9까지 곱하고 9도 1 부터 9까지 곱하는 형식임을 알수 있다. 
단에 해당하는 변수를 i라고 하고 곱하는 1부터9 까지의 수를 j라고 한다면 i가 1증가할 때 마다 j는 1부터 9까지 9번 곱해지는걸
알 수 있다.
변수 i를 for문 for(i = 2; i < 10 ; i++)로 작성하고 변수 j를 for( j = 1; j < 10; j++)로 작성하고 실행한다면 i포문에서 초깃값 2를 가지고
j포문에 들어가 i가 2인 상태에서 j가 1부터 9까지 증가한다 j의 증가가 끝나면 다시 i문으로 돌아가 i가 3이 되고 다시 j포문에 들어가
1부터9까지 증가할 것이다. 이런 식으로 2단부터 9단까지 구구단식을 2중포문을 활용하여 만들어낼 수 있다.
Q.for문을 이중 중첩 하였을 경우 중첩 for문이라고 하는데 for문을 3개,4개,5개... 무한히 중첩시킬수 있을까?
A.이론상 가능하다고 한다. 실제 프로그래머 개발자의 경우 3중,4중 으로 for문을 중첩하여 쓰는 경우도
있다고 한다.

예제 6-7 다중 for문을 이용하여 곱하기 표시 증가시키기
*표시가 첫 번째 줄에는 1개, 두 번째 줄에는 2개, 다섯 번 째 줄에는 5개의 별이 출력되어야 한다. 즉 첫 번째 for문은 출력 행을
결정할 것이고 두 번째 for문은 출력 갯수를 결정할 것이다. 5행을 출력해야 하므로 첫 번째 for문을 for(i=1;i<=5;i++);로 만들고
두 번째 for문이 *의 출력 갯수를 결정하므로 for문의 반복 횟수로 *의 출력 갯수를 정한다면 *을 각 행에따라 1부터 5까지 
증가 시킬 수 있을것이다. 따라서 두 번째 for문을 for(j=1;j<=i;j++)로 만들어주고 print("*")로 출력한다면 첫 번째 행에 i가 1일때
두번째 포문은 한번 반복되므로 *이 한개 i가 2일때 두번째 for문이 2번 반복되므로 2개 i가 5일때 두 번째 포문이 5번 반복되므로
*이 5개 출력되는것을 확인할 수 있다.

Q.실행결과 정상적으로 실행이 되지만 for문이 예제와는 차이가 있는것을 알 수 있다. 왜 그럴까?
A.예제에는 첫 번째 for문이for(i=1;i<6;i++)이고 두 번째 for문이 for(j=1;j<i;j++)임을 확인할 수 있다. 예제와 우리가 만든
for문의 차이는 i<6, i<=5와 j<i , j<=i 임을 알수 있다.  i<6은 i가 1로 시작하여 6보다 작은 정수 즉 5까지만 실행하고
 i<=5은 i가 1부터 시작하여 5와 같아지는 정수 즉 5까지만 실행하는 것을 알 수 있다. 따라서 궁극적으로는 둘의 차이가 없는것이다.
 j<i와  j<=i 도 같은 맥락으로 결과적으로는 같은 결과를 도출함을 알 수 있다.


